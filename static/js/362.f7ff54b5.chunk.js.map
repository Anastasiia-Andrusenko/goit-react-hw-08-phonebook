{"version":3,"file":"static/js/362.f7ff54b5.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/Contact/Contact.module.css?41f4","components/ContactList/Contact/Contact.jsx","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__LgFs2\",\"name\":\"Contact_name__9e7If\",\"number\":\"Contact_number__TkVIW\",\"btn\":\"Contact_btn__fArF3\",\"visually_hidden\":\"Contact_visually_hidden__-RZ4L\"};","import css from \"../Contact/Contact.module.css\";\nimport classNames from 'classnames/bind';\nimport PropTypes from 'prop-types';\n\n// import { deleteContact } from \"redux/slices/contactSlice\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { useDispatch } from \"react-redux\";\n\nexport const Contact = ({ contact }) => {\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    const action = deleteContact(id);\n    dispatch(action);\n  }\n\n  return <>\n     <li className={css.item} onClick={showDetail}>\n      <div className={css.contact}>\n        <p className={css.name}>{contact.name}</p>\n        <p\n          name={contact.name}\n          className={classNames(css.number, css.visually_hidden)}>\n          {contact.number}\n        </p>\n      </div>\n      <button \n        type=\"button\" \n        className={classNames(css.btn, css.visually_hidden)} \n        onClick={() => handleDeleteContact(contact.id)}\n      >\n        delete\n      </button>\n    </li>\n  </>\n}\n\n\n\nconst showDetail = (evt) => {\n  // console.log(evt.currentTarget);\n  const liRef = evt.currentTarget;\n  const btnRef = liRef.childNodes[1];\n  const contactRef = liRef.childNodes[0];\n  const numberRef = contactRef.childNodes[1];\n\n  numberRef.classList.toggle(`${css.visually_hidden}`)\n  btnRef.classList.toggle(`${css.visually_hidden}`)\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n}","\n\nexport const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"ContactList_message__b6Via\",\"smile\":\"ContactList_smile__tWL4a\"};","\nimport { Contact } from \"./Contact/Contact\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllContacts, selectFilter } from \"redux/contacts/selectors\";\n\nimport css from '../ContactList/ContactList.module.css';\n\n\nexport const ContactList = () => {\n  // const contacts = useSelector(store => store.contacts);\n  // const filter = useSelector(store => store.filter);\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n\n  const filterContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n\n\n    const normalizedValue = filter.toLowerCase();\n    const filteredContactsArray = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedValue));\n  \n    return filteredContactsArray;\n  }\n\n  const filteredContacts = filterContacts();\n\n  return <ul className=\"\">\n    {filteredContacts.length > 0 ? filteredContacts.map((contact =>\n      <Contact key={contact.id} contact={contact}/>\n    )) : <p className={css.message}> no contacts <span className={css.smile}>☹</span></p>}\n  </ul>\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"visually_hidden\":\"ContactForm_visually_hidden__7H5KB\",\"form\":\"ContactForm_form__dhl+T\",\"container\":\"ContactForm_container__qpJ1N\",\"btn\":\"ContactForm_btn__wll+u\",\"add\":\"ContactForm_add__2y4N5\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\"};","\nimport css from \"../ContactForm/ContactForm.module.css\";\nimport classNames from \"classnames\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addContact } from \"../../redux/contacts/operations\";\nimport { selectAllContacts } from \"redux/contacts/selectors\";\n\nconst ContactForm = () => {\n\n  const dispatch = useDispatch();\n  \n  const contacts = useSelector(selectAllContacts);\n  const toggleForm = (evt) => {\n    // console.log(evt.target);\n    const btnRef = evt.target;\n    const formRef = btnRef.nextSibling;\n    // console.log(formRef);\n\n    if (btnRef.textContent === \"+\") {\n      btnRef.textContent = \"x\";\n      formRef.classList.remove(`${css.visually_hidden}`)\n    } else if (btnRef.textContent === \"x\") {\n      btnRef.textContent = \"+\";\n      formRef.classList.add(`${css.visually_hidden}`)\n    }\n  }\n\n\n  const onAddContact = (evt) => {\n    evt.preventDefault();\n    const input = evt.target;\n    const name = input.name.value.trim() ;\n    const number = input.number.value.trim() ;\n\n    const equalName = contacts.find(\n      element => element.name.toLowerCase() === name.toLowerCase());\n\n    if (equalName) return alert(`${equalName.name} is already in contacts.`);\n\n\n    if (name && number !== '') {\n      // console.log({ name, number });\n      dispatch(addContact({ name, number }));\n      input.name.value = \"\";\n      input.number.value = \"\";\n      return;\n    }\n    alert('Contact cannot be empty. Enter some text!');\n  }\n\n  return <div className={css.container}>\n      <button type=\"button\" className={css.btn} onClick={toggleForm}>+</button>\n       <form\n        className={classNames(css.visually_hidden, css.form)}\n        onSubmit={onAddContact}> \n        <label className={css.label}>\n          Name\n          <input className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          ></input>\n        </label>\n        <label className={css.label}>\n          Number\n          <input className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          ></input>\n        </label>\n        <button type=\"submit\" className={classNames(css.btn, css.add)}>Add contact</button>\n      </form>\n      </div>\n\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Filter_box__d3XyP\",\"form\":\"Filter_form__wVnxJ\",\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\"};","\nimport {useSelector, useDispatch } from \"react-redux\";\nimport { setFilter } from \"redux/slices/filterSlice\"; \n\nimport css from \"../Filter/Filter.module.css\";\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(store => store.filter);\n  \nconst onInput = (evt) => {\n    const filterValue = evt.currentTarget.value.trim();\n    // console.log(filterValue);\n    dispatch(setFilter(filterValue));\n};\n  \n  return <div className={css.box}>\n      <form name=\"search\" className={css.form}>\n        <label className={css.label}>\n          Find contacts by name\n          <input type=\"search\"\n            className={css.input}\n            name=\"txt\"\n            onChange={onInput}\n            value={filter}\n          >\n          </input>\n        </label>\n      </form>\n    </div>\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\",\"title\":\"Contacts_title__LxdN4\",\"icon\":\"Contacts_icon__NU3jc\"};","import { ContactList } from \"../../components/ContactList/ContactList\";\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Filter from \"../../components/Filter/Filter\";\n\nimport css from './Contacts.module.css';\nimport { ProgressBar } from 'react-loader-spinner';\nimport { RiContactsBook2Fill } from 'react-icons/ri';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectLoading } from \"redux/contacts/selectors\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return <div className={css.container}>\n    <div>\n      <Filter/>\n      <ContactForm/>\n    </div>\n    <div>\n      <h2 className={css.title}>\n        Contacts\n        <RiContactsBook2Fill className={css.icon} />\n      </h2>\n      <div> {isLoading && <ProgressBar\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"progress-bar-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"progress-bar-wrapper\"\n          borderColor = '#F4442E'\n          barColor = '#51E5FF'\n        />}\n      </div>\n      <ContactList/>\n    </div>\n  </div>\n}\n\nexport default Contacts;"],"names":["Contact","contact","dispatch","useDispatch","className","css","onClick","showDetail","name","classNames","number","type","id","action","deleteContact","handleDeleteContact","evt","liRef","currentTarget","btnRef","childNodes","classList","toggle","selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","ContactList","useSelector","filteredContacts","normalizedValue","toLowerCase","includes","filterContacts","length","map","target","formRef","nextSibling","textContent","remove","add","onSubmit","preventDefault","input","value","trim","equalName","find","element","alert","addContact","pattern","title","required","store","onChange","filterValue","setFilter","isLoading","useEffect","fetchContacts","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor"],"sourceRoot":""}